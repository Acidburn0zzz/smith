#!/usr/bin/python
# encoding: utf-8
# this is a smith configuration file
# please adjust this template to your needs

# set the default output folders
out = "results"
DOCDIR = ["documentation", "web"]
OUTDIR = "installers"
ZIPDIR = "releases"
TESTDIR = "tests"
TESTRESULTSDIR = 'results/tests'
STANDARDS = 'tests/reference'

# set the version control system
VCS = 'git'

# set the font name, version, licensing and description
APPNAME = 'Foo'
VERSION = '1.123'
TTF_VERSION = '1.123'
BUILDLABEL = "alpha1"
COPYRIGHT = "Copyright (c) 2016, Acme Inc (http://www.acme.com) with Reserved Font Names RFN1 and RFN2"
LICENSE = "OFL.txt"
RESERVEDOFL = "RFN1 and RFN2"

DESC_SHORT = "This is a short description"
DESC_LONG = """This is a much longer description
on multiple lines.
Font sources are published in the repository and a smith open workflow is
used for building, testing and releasing.
"""

# packaging
DESC_NAME = "Foo"
DEBPKG = 'fonts-acme-foo'


# script information
finfo = {
    "Example.txt" : "script=DFLT",
    "Example-roman.txt" : "script=latn"
    }

# set the build and test parameters
TESTSTRING = u'\u0E07\u0331 \u0E0D\u0331 \u0E19\u0331 \u0E21\u0331'

for ext in ('-Regular', '-Italic', '-Bold', '-Bold-Italic'):
    font(target=process(APPNAME + '.ttf', name("APPNAME + 'DEVEL' ")),
         source=process(APPNAME + '.ufo', cmd("../tools/examplescript.py ${SRC} ${TGT}")),
         version=TTF_VERSION,
         copyright=COPYRIGHT,
         license=ofl('RFN1', 'RFN2'),
         graphite=gdl('source/' + 'graphite/' + APPNAME + '.gdl',
                      master=['source/' + 'graphite/' + APPNAME + 'master.gdl'],
                      make_params=("-m _R -z 8"),
                      params='-d' '-w3521 -w3530 -q -d -v2',
                      depends=['source/' + 'graphite/' + 'myfeatures.gdl']),
         ap='source/' + APPNAME + '.xml',
         classes='source/classes.xml',
         opentype=fea('source/' + 'opentype/' + APPNAME + '.fea',
                      master='source/' + 'opentype/' + APPNAME + '_ext.fea',
                      make_params="-m _R -z 8"),
         script=['latn'],
         fret=fret(params='-r -b'),
         woff=woff(params='-v ' + VERSION + ' -m ../source/foo-WOFF-metadata.xml'),
         typetuner='source/typetuner/feat_all.xml',
        )


def configure(ctx):
    ctx.env['FOO'] = 'foo'
    ctx.env['BAR'] = '../tools/bar.py'
